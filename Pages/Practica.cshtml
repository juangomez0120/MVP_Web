@page
@model MVP_Web.Pages.PracticaModel
@{
    ViewData["Title"] = "Practica";
}
<style>
    html,
    body {
        background: #000;
        width: 100%;
        height: 100%;
        overflow: visible;
        padding: 0;
        margin: 0;
    }

    div#gameContainer {
        background: transparent !important;
        position: absolute;
    }

    div#gameContainer canvas {
        position: absolute;
    }

    div#gameContainer canvas[data-pixel-art="true"] {
        position: absolute;
        image-rendering: optimizeSpeed;
        image-rendering: -webkit-crisp-edges;
        image-rendering: -moz-crisp-edges;
        image-rendering: -o-crisp-edges;
        image-rendering: crisp-edges;
        image-rendering: -webkit-optimize-contrast;
        image-rendering: optimize-contrast;
        image-rendering: pixelated;
        -ms-interpolation-mode: nearest-neighbor;
    }
</style>

<div id="gameContainer">
    <canvas id="unity-canvas" data-pixel-art=""></canvas>
    <script src="~/Build/WebGLBuild.loader.js"></script>
    <script>createUnityInstance(document.querySelector("#unity-canvas"), {
            dataUrl: "/Build/WebGLBuild.data",
            frameworkUrl: "/Build/WebGLBuild.framework.js",
            codeUrl: "/Build/WebGLBuild.wasm",
            streamingAssetsUrl: "StreamingAssets",
            companyName: "DefaultCompany",
            productName: "Animation",
            productVersion: "1.0",
        }).then(function (instance) {
            var canvas = instance.Module.canvas;
            var container = canvas.parentElement;
            function onResize() {
                var w;
                var h;

                if (scaleToFit) {
                    w = window.innerWidth;
                    h = window.innerHeight;

                    var r = 600 / 960;

                    if (w * r > window.innerHeight) {
                        w = Math.min(w, Math.ceil(h / r));
                    }
                    h = Math.floor(w * r);
                } else {
                    w = 960;
                    h = 600;
                }

                container.style.width = canvas.style.width = w + "px";
                container.style.height = canvas.style.height = h + "px";
                container.style.top = Math.floor((window.innerHeight - h) / 2) + "px";
                container.style.left = Math.floor((window.innerWidth - w) / 2) + "px";
            }

            var scaleToFit;
            try {
                scaleToFit = !!JSON.parse("");
            } catch (e) {
                scaleToFit = true;
            }
            window.addEventListener('resize', onResize);
            onResize();
        });</script>
</div>
